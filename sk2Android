package com.example.android.mypersonalvoiceassistance;

import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.speech.RecognitionListener;
import android.speech.RecognizerIntent;
import android.speech.SpeechRecognizer;
import android.speech.tts.TextToSpeech;
import android.view.View;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.EditText;
import android.widget.SearchView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;

import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;

import static android.Manifest.permission.READ_EXTERNAL_STORAGE;
import static android.Manifest.permission.RECORD_AUDIO;
import static android.Manifest.permission.WRITE_EXTERNAL_STORAGE;

public class MainActivity extends AppCompatActivity {

    SearchView searchView;

    private SpeechRecognizer speechRecognizer;
    private TextToSpeech textToSpeech;
    private TextView textView;
    private Intent intent;
    private  WebView web1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ActivityCompat.requestPermissions(this, new String[]{RECORD_AUDIO, WRITE_EXTERNAL_STORAGE, READ_EXTERNAL_STORAGE}, PackageManager.PERMISSION_GRANTED);
        textView = findViewById(R.id.textView);
        textToSpeech = new TextToSpeech(this, new TextToSpeech.OnInitListener() {
            @Override
            public void onInit(int status) {
            }
        });

        intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);

        speechRecognizer = SpeechRecognizer.createSpeechRecognizer(this);
        speechRecognizer.setRecognitionListener(new RecognitionListener() {
            @Override
            public void onReadyForSpeech(Bundle params) {
            }
            @Override
            public void onBeginningOfSpeech() {
            }
            @Override
            public void onRmsChanged(float rmsdB) {
            }
            @Override
            public void onBufferReceived(byte[] buffer) {
            }
            @Override
            public void onEndOfSpeech() {
            }
            @Override
            public void onError(int error) {
            }
            @Override
            public void onResults(Bundle results) {
                ArrayList<String> matches = results.getStringArrayList(speechRecognizer.RESULTS_RECOGNITION);
                    String string = "";
                    textView.setText("");
                    if (matches != null){
                        string = matches.get(0);
                        textView.setText(string);

//                    start searching in chrome
//                    Uri uri=Uri.parse("https://www.google.com/search?q="+textView.getText().toString());
//                    Intent intent=new Intent(Intent.ACTION_VIEW,uri);
//                    startActivity(intent);

                    if (string.equals("create")){
                        createMethod();
                    }
                    if (string.equals("yes")){
                        yes();
                    }
                        if (string.equals("no")){
                            no();
                        }
                        if (string.equals("Kuchh Karne Ko Nahin Hai")){
                            karne();
                        }
                        if (string.equals("Bor ho raha hun")) {
                            karne();
                        }
                        if (string.equals("Kuchh Kam Nahin Hai karne ko")) {
                            karne();
                        }
                        if (string.equals("yaar bore ho raha hun Kuchh Kam Nahin Hai karne ko")) {
                            karne();
                        }
                        if (string.equals("theek hai bolo")){
                            theek();
                        }
                        if (string.equals("ok bolo")){
                            theek();
                        }
                        if (string.equals("good")){
                            good();
                        }
                        if (string.equals("good good")){
                            good();
                        }
                        if (string.equals("very good")){
                            good();
                        }
                        if (string.equals("Shabash")){
                            good();
                        }
                        if (string.equals("who are you")){
                            who1();
                        }
                        if (string.equals("Kaun Ho Tum")){
                            who2();
                        }
                        if (string.equals("Kya Main aapko Jaanta hun")){
                            who2();
                        }
                        if (string.equals("Kaun Hoon Main")){
                            me2();
                        }
                        if (string.equals("Main Kaun Hoon")){
                            me2();
                        }
                        if (string.equals("Main Kaun")){
                            me2();
                        }
                        if (string.equals("who am I")){
                            me1();
                        }
                        if (string.equals("Royal ko jante ho")){
                            royal2();
                        }
                        if (string.equals("are you know who is Royal")){
                            royal1();
                        }
                        if (string.equals("do you know who is Royal")){
                            royal1();
                        }
                        if (string.equals("Kya tum Royal ko jante ho")){
                            royal2();
                        }




                    }
            }
            @Override
            public void onPartialResults(Bundle partialResults) {
            }
            @Override
            public void onEvent(int eventType, Bundle params) {
            }
        });
    }
    
    private void who1() {
        textToSpeech.speak("Sir ? Are you kidding with me , I am you personal Assistant But still incompleted.", TextToSpeech.QUEUE_FLUSH, null, null);
        try {
            Thread.sleep(7000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        speechRecognizer.startListening(intent);
    }

    private void good() {
        textToSpeech.speak("Thank you sir ? Any other help  sir ? ", TextToSpeech.QUEUE_FLUSH, null, null);
        try {
            Thread.sleep(4000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        speechRecognizer.startListening(intent);
    }


    private void theek() {
        textToSpeech.speak("सर, अगर आप फ्री हैं तो क्या आप मुझे अपग्रेड कर सकते हैं? ", TextToSpeech.QUEUE_FLUSH, null, null);
        try {
            Thread.sleep(4000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        speechRecognizer.startListening(intent);
    }

    private void karne() {
        textToSpeech.speak(" सर, अगर आप बुरा न मानें तो मैं आपके लिए कुछ सुझा सकता हूं", TextToSpeech.QUEUE_FLUSH, null, null);
        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        speechRecognizer.startListening(intent);
    }

    private void no() {
        textToSpeech.speak(" OK sir ? As Your wish Sir ? ", TextToSpeech.QUEUE_FLUSH, null, null);
        try {
            Thread.sleep(3000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        speechRecognizer.startListening(intent);
    }

    private void yes() {
        textToSpeech.speak(" Any Problem Sir ? Are you want to share with me sir..... ", TextToSpeech.QUEUE_FLUSH, null, null);
        try {
            Thread.sleep(4000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        speechRecognizer.startListening(intent);
    }

    public void startButton(View view){
        textToSpeech.speak("Hey Smartiex ? What's up? ? how can i help you ?", TextToSpeech.QUEUE_FLUSH, null, null);
        try {
            Thread.sleep(4000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        speechRecognizer.startListening(intent);
    }

    private void createMethod(){
        File file = new File(Environment.getExternalStorageDirectory() + File.separator + "im here.txt");
        try {
            if (!file.exists()){
                file.createNewFile();
            }
            FileWriter fileWriter = new FileWriter(file);
            fileWriter.append("please update me....... ");
            fileWriter.flush();
            fileWriter.close();
        }
        catch (Exception e){
            e.printStackTrace();
            return;
        }
        textToSpeech.speak(" All Done Sir ? Thankyou  Sir ?  Have a Nice Day Sir ? ", TextToSpeech.QUEUE_FLUSH, null, null);
        repeat();



    }


}
